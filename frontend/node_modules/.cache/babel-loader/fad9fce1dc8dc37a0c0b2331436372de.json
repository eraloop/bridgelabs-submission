{"ast":null,"code":"import ApiService from './api';\nimport TokenService from './storage';\nconst UserService = {\n  login: async function (user) {\n    const requestData = {\n      method: 'post',\n      url: 'https://simplor.herokuapp.com/api/user/login',\n      data: {\n        email: user.email,\n        password: user.password\n      }\n    };\n\n    try {\n      // ApiService.setHeader()\n      const response = await ApiService.customRequest(requestData); // construct a user object\n\n      const user = {\n        name: response.data.last_name,\n        email: response.data.email\n      }; // saving the token and refresh token to the local storage \n\n      TokenService.saveAccessToken(response.data.access);\n      TokenService.saveToken(response.data.token);\n      TokenService.saveRefreshToken(response.data.refresh); // save current user \n\n      TokenService.saveCurrentUser(user); // returning the response to the vuex store tobe saved and used to verify routes\n\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  },\n  register: async function (user) {\n    const registrationData = {\n      method: 'POST',\n      url: 'https://simplor.herokuapp.com/api/user/register',\n      data: {\n        first_name: user.fn,\n        last_name: user.ln,\n        phone: user.phone,\n        email: user.email,\n        avatar: user.pic,\n        password: user.password\n      }\n    };\n\n    try {\n      const response = await ApiService.customRequest(registrationData);\n      TokenService.saveToken(response.data.token);\n      return response;\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async logout() {\n    const requestData = {\n      method: 'POST',\n      url: 'https://simplor.herokuapp.com/api/user/logout',\n      data: {\n        refresh_token: TokenService.getRefreshToken()\n      }\n    };\n\n    try {\n      ApiService.setAuthHeader();\n      const response = await ApiService.customRequest(requestData); // removing the token and refresh toke from the local storage \n\n      TokenService.removeToken();\n      TokenService.removeAccessToken();\n      TokenService.removeRefreshToken();\n      ApiService.removeHeader();\n      return response;\n    } catch (error) {\n      return error;\n    }\n  }\n\n};\nexport default UserService;\nexport { UserService };","map":{"version":3,"names":["ApiService","TokenService","UserService","login","user","requestData","method","url","data","email","password","response","customRequest","name","last_name","saveAccessToken","access","saveToken","token","saveRefreshToken","refresh","saveCurrentUser","error","register","registrationData","first_name","fn","ln","phone","avatar","pic","logout","refresh_token","getRefreshToken","setAuthHeader","removeToken","removeAccessToken","removeRefreshToken","removeHeader"],"sources":["/home/akams_r/Desktop/scrap/bridgelabs-submission/frontend/src/services/user.js"],"sourcesContent":["import ApiService from './api'\nimport TokenService from './storage'\n\nconst UserService = {\n  \n  login: async function (user) {\n    const requestData = {\n      method: 'post',\n      url: 'https://simplor.herokuapp.com/api/user/login',\n\n      data: {\n        email: user.email,\n        password: user.password\n      }\n    }\n\n    try {\n      // ApiService.setHeader()\n      const response = await ApiService.customRequest(requestData)\n\n      // construct a user object\n      const user = {\n        name : response.data.last_name,\n        email : response.data.email\n      }\n      // saving the token and refresh token to the local storage \n      TokenService.saveAccessToken(response.data.access)\n      TokenService.saveToken(response.data.token)\n      TokenService.saveRefreshToken(response.data.refresh)\n      // save current user \n      TokenService.saveCurrentUser(user)\n      // returning the response to the vuex store tobe saved and used to verify routes\n      return response.data\n    } catch (error) {\n      return error\n    }\n  },\n\n  register: async function (user) {\n    const registrationData = {\n      method: 'POST',\n      url: 'https://simplor.herokuapp.com/api/user/register',\n\n      data: {\n        first_name : user.fn,\n        last_name : user.ln,\n        phone: user.phone,\n        email: user.email,\n        avatar: user.pic,\n        password: user.password\n    },\n    }\n\n    try {\n      const response = await ApiService.customRequest(registrationData)\n      TokenService.saveToken(response.data.token)\n      return response\n    } catch (error) {\n      return error\n    }\n  },\n\n  async logout () {\n      const requestData = {\n        method: 'POST',\n        url: 'https://simplor.herokuapp.com/api/user/logout',\n        data:{\n          refresh_token: TokenService.getRefreshToken()\n        }\n      }\n  \n      try {\n        ApiService.setAuthHeader()\n        const response = await ApiService.customRequest(requestData)\n        // removing the token and refresh toke from the local storage \n        TokenService.removeToken()\n        TokenService.removeAccessToken()\n        TokenService.removeRefreshToken()\n        ApiService.removeHeader()\n        return response\n\n      } catch (error) {\n        return error\n      }\n  },\n  \n}\n\nexport default UserService\nexport {UserService}\n\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,MAAMC,WAAW,GAAG;EAElBC,KAAK,EAAE,gBAAgBC,IAAhB,EAAsB;IAC3B,MAAMC,WAAW,GAAG;MAClBC,MAAM,EAAE,MADU;MAElBC,GAAG,EAAE,8CAFa;MAIlBC,IAAI,EAAE;QACJC,KAAK,EAAEL,IAAI,CAACK,KADR;QAEJC,QAAQ,EAAEN,IAAI,CAACM;MAFX;IAJY,CAApB;;IAUA,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAACY,aAAX,CAAyBP,WAAzB,CAAvB,CAFE,CAIF;;MACA,MAAMD,IAAI,GAAG;QACXS,IAAI,EAAGF,QAAQ,CAACH,IAAT,CAAcM,SADV;QAEXL,KAAK,EAAGE,QAAQ,CAACH,IAAT,CAAcC;MAFX,CAAb,CALE,CASF;;MACAR,YAAY,CAACc,eAAb,CAA6BJ,QAAQ,CAACH,IAAT,CAAcQ,MAA3C;MACAf,YAAY,CAACgB,SAAb,CAAuBN,QAAQ,CAACH,IAAT,CAAcU,KAArC;MACAjB,YAAY,CAACkB,gBAAb,CAA8BR,QAAQ,CAACH,IAAT,CAAcY,OAA5C,EAZE,CAaF;;MACAnB,YAAY,CAACoB,eAAb,CAA6BjB,IAA7B,EAdE,CAeF;;MACA,OAAOO,QAAQ,CAACH,IAAhB;IACD,CAjBD,CAiBE,OAAOc,KAAP,EAAc;MACd,OAAOA,KAAP;IACD;EACF,CAjCiB;EAmClBC,QAAQ,EAAE,gBAAgBnB,IAAhB,EAAsB;IAC9B,MAAMoB,gBAAgB,GAAG;MACvBlB,MAAM,EAAE,MADe;MAEvBC,GAAG,EAAE,iDAFkB;MAIvBC,IAAI,EAAE;QACJiB,UAAU,EAAGrB,IAAI,CAACsB,EADd;QAEJZ,SAAS,EAAGV,IAAI,CAACuB,EAFb;QAGJC,KAAK,EAAExB,IAAI,CAACwB,KAHR;QAIJnB,KAAK,EAAEL,IAAI,CAACK,KAJR;QAKJoB,MAAM,EAAEzB,IAAI,CAAC0B,GALT;QAMJpB,QAAQ,EAAEN,IAAI,CAACM;MANX;IAJiB,CAAzB;;IAcA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAACY,aAAX,CAAyBY,gBAAzB,CAAvB;MACAvB,YAAY,CAACgB,SAAb,CAAuBN,QAAQ,CAACH,IAAT,CAAcU,KAArC;MACA,OAAOP,QAAP;IACD,CAJD,CAIE,OAAOW,KAAP,EAAc;MACd,OAAOA,KAAP;IACD;EACF,CAzDiB;;EA2DlB,MAAMS,MAAN,GAAgB;IACZ,MAAM1B,WAAW,GAAG;MAClBC,MAAM,EAAE,MADU;MAElBC,GAAG,EAAE,+CAFa;MAGlBC,IAAI,EAAC;QACHwB,aAAa,EAAE/B,YAAY,CAACgC,eAAb;MADZ;IAHa,CAApB;;IAQA,IAAI;MACFjC,UAAU,CAACkC,aAAX;MACA,MAAMvB,QAAQ,GAAG,MAAMX,UAAU,CAACY,aAAX,CAAyBP,WAAzB,CAAvB,CAFE,CAGF;;MACAJ,YAAY,CAACkC,WAAb;MACAlC,YAAY,CAACmC,iBAAb;MACAnC,YAAY,CAACoC,kBAAb;MACArC,UAAU,CAACsC,YAAX;MACA,OAAO3B,QAAP;IAED,CAVD,CAUE,OAAOW,KAAP,EAAc;MACd,OAAOA,KAAP;IACD;EACJ;;AAjFiB,CAApB;AAqFA,eAAepB,WAAf;AACA,SAAQA,WAAR"},"metadata":{},"sourceType":"module"}