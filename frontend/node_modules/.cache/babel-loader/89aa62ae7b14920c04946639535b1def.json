{"ast":null,"code":"export default {\n  data() {\n    return {\n      catform: {\n        name: \"\",\n        image: \"\",\n        description: \"\"\n      },\n      control: true\n    };\n  },\n\n  computed: {\n    categoryCreated() {\n      return this.$store.getters.returnCategoryCreated;\n    }\n\n  },\n\n  mounted() {},\n\n  methods: {\n    handleSelects(e) {\n      const fileList = Array.prototype.slice.call(e.target.files);\n      fileList.forEach(f => {\n        if (!f.type.match(\"image.*\")) {\n          return;\n        }\n\n        const reader = new FileReader();\n        const self = this;\n\n        reader.onload = function (e) {\n          self.catform.image = e.target.result;\n        };\n\n        reader.readAsDataURL(f);\n      });\n    },\n\n    createCategory() {\n      this.catform.created_at = new Date().toISOString();\n      this.$store.dispatch(\"create\", this.catform);\n      this.catform = {};\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA;EAEAA;IACA;MAEAC;QACAC,QADA;QAEAC,SAFA;QAGAC;MAHA,CAFA;MAOAC;IAPA;EASA,CAZA;;EAcAC;IACAC;MACA;IACA;;EAHA,CAdA;;EAoBAC,WAEA,CAtBA;;EAwBAC;IAEAC;MACA;MACAC;QAEA;UACA;QACA;;QAEA;QACA;;QACAC;UAEAC;QACA,CAHA;;QAIAD;MACA,CAbA;IAeA,CAnBA;;IAqBAE;MACA;MACA;MACA;IACA;;EAzBA;AAxBA","names":["data","catform","name","image","description","control","computed","categoryCreated","mounted","methods","handleSelects","fileList","reader","self","createCategory"],"sourceRoot":"src/components","sources":["CreateCategories.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex justify-content-center align-items-center mx-auto\">\n    <div class=\"form-region shadow-lg my-4 d-flex justify-content-center align-items-center  px-4\">\n\n            <div class=\"reg-form-section d-flex-column align-items-center justify-content-center mx-auto\">\n                <section v-if=\"(categoryCreated && control)\" class=\"bg-success m-2 text-center text-white\">\n                    <p class=\"py-3\">Category created successfully</p>\n                </section>\n                <section class=\"action-btn d-flex align-items-center justify-content-center text-center mb-3 pt-3 pb-2\">\n                    <h5>Add a new category</h5>\n                </section>\n\n                <form action=\"POST\" enctype=\"multipart/form-data\">\n                    <div class=\"mb-3\">\n                        <label for=\"name\">Name</label><br/>\n                        <input v-model=\"catform.name\" class=\"\" type=\"text\" name=\"name\"  placeholder=\"John\" >\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"profilepicture\">Profile Picture</label><br/>\n                        <input  type=\"file\" @change=\"handleSelects\" accept=\"image/*\" name=\"images\" class=\" mulitple\">\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"password\">Description</label><br/>\n                        <textarea v-model=\"catform.description\" type=\"text\" placeholder=\"Say something about the category\" name=\"desciption\" cols=\"47\" rows=\"3\"></textarea>\n                    </div>\n\n                    <div class=\"mb-3\">\n                       <button @click.prevent=\"createCategory\"  class=\"submit-btn col-12\" type=\"submit\" > Create</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n  </div>\n</template>\n\n<script>\nexport default {\n\n    data(){\n        return{\n\n            catform:{\n               name:\"\",\n               image: \"\",\n               description: \"\",\n            },\n            control: true\n        }\n    },\n\n    computed:{\n        categoryCreated(){\n            return this.$store.getters.returnCategoryCreated\n        }\n    },\n\n    mounted(){\n\n    },\n\n    methods:{\n\n         handleSelects(e) {\n            const fileList = Array.prototype.slice.call(e.target.files);\n            fileList.forEach(f => {\n\n                if (!f.type.match(\"image.*\")) {\n                    return;\n                }\n\n                const reader = new FileReader();\n                const self = this;\n                reader.onload = function (e) {\n                \n                self.catform.image = e.target.result;\n                }\n                reader.readAsDataURL(f);\n            });\n\n        },\n\n        createCategory(){\n            this.catform.created_at = new Date().toISOString();\n            this.$store.dispatch(\"create\", this.catform)\n            this.catform = {}\n        },\n        \n    }\n}\n</script>\n\n<style>\n\ntextarea{\n    border: 1px solid #04126e;\n    border-radius: 5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}