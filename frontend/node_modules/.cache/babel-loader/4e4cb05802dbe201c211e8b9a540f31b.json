{"ast":null,"code":"// import {getGoogleUrl}  from '../utils/googleOauth';\nexport default {\n  data() {\n    return {\n      from: '/',\n      regform: {\n        fn: '',\n        ln: '',\n        email: '',\n        phone: '',\n        pic: '',\n        password: ''\n      }\n    };\n  },\n\n  mounted() {},\n\n  methods: {\n    handleSelects(e) {\n      const fileList = Array.prototype.slice.call(e.target.files);\n      fileList.forEach(f => {\n        if (!f.type.match(\"image.*\")) {\n          return;\n        }\n\n        const reader = new FileReader();\n        const self = this;\n\n        reader.onload = function (e) {\n          self.regform.pic = e.target.result;\n        };\n\n        reader.readAsDataURL(f);\n      });\n    },\n\n    registerUser() {\n      this.$store.dispatch(\"registerUser\", this.regform);\n      this.regform = {};\n    },\n\n    getGoogleUrl: () => {\n      const rootUrl = `https://accounts.google.com/o/oauth2/v2/auth`;\n      const options = {\n        redirect_uri: process.env.VITE_GOOGLE_OAUTH_REDIRECT,\n        client_id: process.env.VITE_GOOGLE_OAUTH_CLIENT_ID,\n        access_type: 'offline',\n        response_type: 'code',\n        prompt: 'consent',\n        scope: ['https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email'].join(' '),\n        state: '/'\n      };\n      const qs = new URLSearchParams(options);\n      return `${rootUrl}?${qs.toString()}`;\n    }\n  }\n};","map":{"version":3,"mappings":"AA8DA;AACA;EAEAA;IACA;MACAC,SADA;MAGAC;QACAC,MADA;QAEAC,MAFA;QAGAC,SAHA;QAIAC,SAJA;QAKAC,OALA;QAMAC;MANA;IAHA;EAaA,CAhBA;;EAkBAC,WAEA,CApBA;;EAsBAC;IAEAC;MACA;MACAC;QAEA;UACA;QACA;;QAEA;QACA;;QACAC;UAEAC;QACA,CAHA;;QAIAD;MACA,CAbA;IAeA,CAnBA;;IAqBAE;MACA;MACA;IACA,CAxBA;;IA0BAC;MACA;MAEA;QACAC,oDADA;QAEAC,kDAFA;QAGAC,sBAHA;QAIAC,qBAJA;QAKAC,iBALA;QAMAC,QACA,kDADA,EAEA,gDAFA,EAGAC,IAHA,CAGA,GAHA,CANA;QAUAC;MAVA;MAaA;MAEA;IACA;EA7CA;AAtBA","names":["data","from","regform","fn","ln","email","phone","pic","password","mounted","methods","handleSelects","fileList","reader","self","registerUser","getGoogleUrl","redirect_uri","client_id","access_type","response_type","prompt","scope","join","state"],"sourceRoot":"src/components","sources":["RegistrationForm.vue"],"sourcesContent":["\n<template>\n  <div class=\"d-flex justify-content-center align-items-center mx-auto\">\n    <div class=\"form-region shadow-lg my-4\">\n        <div class=\"info-section container d-flex-column align-items-center justify-content-center px-5 py-5\">\n            <div class=\"my-5\">\n                <h1 class=\"pt-5\">BridgeLabs Onboarding Task</h1>\n                <h5>FrontEnd - login, register, logout, file upload, google oauth</h5>\n                <p>This task is to create a working registration, login aand logout flow.</p>\n            </div>\n        </div>\n\n        <div class=\"form-section d-flex-column justify-content-center align-items-center  px-4\">\n            <section class=\"google-btn  d-flex align-items-center justify-content-center pt-4 pb-2\">\n                <button class=\"d-flex align-items-center outline justify-content-center text-center px-5 py-2\">\n                    <a :href=\"getGoogleUrl()\" class=\"google-auth d-flex align-items-center outline justify-content-center text-center px-5 py-2\">\n                        <span><img src=\"../../static/images/google-brands.svg\" alt=\"\"  height=\"20px\" width=\"20px\"></span>\n                        <span class=\"px-3 text-primary\">Join with Google</span>\n                    </a>\n                </button>\n                    \n            </section>\n\n            <div  class=\"reg-form-section d-flex align-items-center justify-content-center mx-auto\">\n                <form action=\"\">\n                    <div class=\"py-1\">\n                        <label for=\"firstname\">First Name</label><br/>\n                        <input v-model=\"regform.fn\" class=\"\" type=\"text\" name=\"firstname\"  placeholder=\"John\" >\n                    </div>\n                    <div class=\"py-1\">\n                        <label for=\"lastname\">Last Name</label><br/>\n                        <input v-model=\"regform.ln\" type=\"text\" name=\"lastname\" placeholder=\"Doe\">\n                    </div>\n                    <div class=\"py-1\">\n                        <label for=\"email\">Email</label><br/>\n                        <input required  v-model=\"regform.email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"example@gmail.com\">\n                    </div>\n                    <div class=\"py-1\">\n                        <label for=\"phone\">Phone</label><br/>\n                        <input v-model=\"regform.phone\" type=\"number\" name=\"phone\" placeholder=\"673-473-533\">\n                    </div>\n                    <div class=\"py-1\">\n                        <label for=\"profilepicture\">Profile Picture</label><br/>\n                        <input  required type=\"file\" @change=\"handleSelects\" accept=\"image/*\" name=\"images\" class=\" mulitple\">\n                    </div>\n                    <div class=\"py-1\">\n                        <label for=\"password\">Password</label><br/>\n                        <input v-model=\"regform.password\" required type=\"password\" name=\"password\"  placeholder=\"...........\">\n                    </div>\n\n                    <div class=\"py-1\">\n                       <button @click.prevent=\"registerUser\"  class=\"filled col-12\" type=\"submit\" > Register</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n// import {getGoogleUrl}  from '../utils/googleOauth';\nexport default {\n\n    data(){\n        return{\n            from: '/',\n\n            regform:{\n                fn: '',\n                ln: '',\n                email: '',\n                phone: '',\n                pic: '',\n                password: ''\n            },\n\n        }\n    },\n\n    mounted(){\n\n    },\n\n    methods:{\n\n         handleSelects(e) {\n            const fileList = Array.prototype.slice.call(e.target.files);\n            fileList.forEach(f => {\n\n                if (!f.type.match(\"image.*\")) {\n                    return;\n                }\n\n                const reader = new FileReader();\n                const self = this;\n                reader.onload = function (e) {\n                \n                self.regform.pic = e.target.result;\n                }\n                reader.readAsDataURL(f);\n            });\n\n        },\n\n        registerUser(){\n            this.$store.dispatch(\"registerUser\", this.regform)\n            this.regform = {}\n        },\n\n        getGoogleUrl: () => {\n            const rootUrl = `https://accounts.google.com/o/oauth2/v2/auth`;\n        \n            const options = {\n            redirect_uri: process.env.VITE_GOOGLE_OAUTH_REDIRECT,\n            client_id: process.env.VITE_GOOGLE_OAUTH_CLIENT_ID,\n            access_type: 'offline',\n            response_type: 'code',\n            prompt: 'consent',\n            scope: [\n                'https://www.googleapis.com/auth/userinfo.profile',\n                'https://www.googleapis.com/auth/userinfo.email',\n            ].join(' '),\n            state: '/',\n            };\n        \n            const qs = new URLSearchParams(options);\n        \n            return `${rootUrl}?${qs.toString()}`;\n        }\n        \n        \n    }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}