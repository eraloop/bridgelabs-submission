{"ast":null,"code":"var googleAuth = function () {\n  function installClient() {\n    var apiUrl = 'https://apis.google.com/js/api.js';\n    return new Promise(resolve => {\n      var script = document.createElement('script');\n      script.src = apiUrl;\n\n      script.onreadystatechange = script.onload = function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          setTimeout(function () {\n            resolve();\n          }, 500);\n        }\n      };\n\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n\n  function initClient(config) {\n    return new Promise((resolve, reject) => {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init(config).then(() => {\n          resolve(window.gapi);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    });\n  }\n\n  function Auth() {\n    if (!(this instanceof Auth)) return new Auth();\n    this.GoogleAuth = null;\n    /* window.gapi.auth2.getAuthInstance() */\n\n    this.isAuthorized = false;\n    this.isInit = false;\n    this.prompt = null;\n\n    this.isLoaded = function () {\n      /* eslint-disable */\n      console.warn('isLoaded() will be deprecated. You can use \"this.$gAuth.isInit\"');\n      return !!this.GoogleAuth;\n    };\n\n    this.load = (config, prompt) => {\n      installClient().then(() => {\n        return initClient(config);\n      }).then(gapi => {\n        this.GoogleAuth = gapi.auth2.getAuthInstance();\n        this.isInit = true;\n        this.prompt = prompt;\n        this.isAuthorized = this.GoogleAuth.isSignedIn.get();\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.signIn = (successCallback, errorCallback) => {\n      return new Promise((resolve, reject) => {\n        if (!this.GoogleAuth) {\n          if (typeof errorCallback === 'function') errorCallback(false);\n          reject(false);\n          return;\n        }\n\n        this.GoogleAuth.signIn().then(googleUser => {\n          if (typeof successCallback === 'function') successCallback(googleUser);\n          this.isAuthorized = this.GoogleAuth.isSignedIn.get();\n          resolve(googleUser);\n        }).catch(error => {\n          if (typeof errorCallback === 'function') errorCallback(error);\n          reject(error);\n        });\n      });\n    };\n\n    this.getAuthCode = (successCallback, errorCallback) => {\n      return new Promise((resolve, reject) => {\n        if (!this.GoogleAuth) {\n          if (typeof errorCallback === 'function') errorCallback(false);\n          reject(false);\n          return;\n        }\n\n        this.GoogleAuth.grantOfflineAccess({\n          prompt: this.prompt\n        }).then(function (resp) {\n          if (typeof successCallback === 'function') successCallback(resp.code);\n          resolve(resp.code);\n        }).catch(function (error) {\n          if (typeof errorCallback === 'function') errorCallback(error);\n          reject(error);\n        });\n      });\n    };\n\n    this.signOut = (successCallback, errorCallback) => {\n      return new Promise((resolve, reject) => {\n        if (!this.GoogleAuth) {\n          if (typeof errorCallback === 'function') errorCallback(false);\n          reject(false);\n          return;\n        }\n\n        this.GoogleAuth.signOut().then(() => {\n          if (typeof successCallback === 'function') successCallback();\n          this.isAuthorized = false;\n          resolve(true);\n        }).catch(error => {\n          if (typeof errorCallback === 'function') errorCallback(error);\n          reject(error);\n        });\n      });\n    };\n  }\n\n  return new Auth();\n}();\n\nfunction installGoogleAuthPlugin(Vue, options) {\n  /* eslint-disable */\n  //set config\n  let GoogleAuthConfig = null;\n  let GoogleAuthDefaultConfig = {\n    scope: 'profile email'\n  };\n  let prompt = 'select_account';\n\n  if (typeof options === 'object') {\n    GoogleAuthConfig = Object.assign(GoogleAuthDefaultConfig, options);\n    if (options.scope) GoogleAuthConfig.scope = options.scope;\n    if (options.prompt) prompt = options.prompt;\n\n    if (!options.clientId) {\n      console.warn('clientId is required');\n    }\n  } else {\n    console.warn('invalid option type. Object type accepted only');\n  } //Install Vue plugin\n\n\n  Vue.gAuth = googleAuth;\n  Object.defineProperties(Vue.prototype, {\n    $gAuth: {\n      get: function () {\n        return Vue.gAuth;\n      }\n    }\n  });\n  Vue.gAuth.load(GoogleAuthConfig, prompt);\n}\n\nexport default installGoogleAuthPlugin;","map":{"version":3,"names":["googleAuth","installClient","apiUrl","Promise","resolve","script","document","createElement","src","onreadystatechange","onload","readyState","test","setTimeout","getElementsByTagName","appendChild","initClient","config","reject","window","gapi","load","auth2","init","then","catch","error","Auth","GoogleAuth","isAuthorized","isInit","prompt","isLoaded","console","warn","getAuthInstance","isSignedIn","get","signIn","successCallback","errorCallback","googleUser","getAuthCode","grantOfflineAccess","resp","code","signOut","installGoogleAuthPlugin","Vue","options","GoogleAuthConfig","GoogleAuthDefaultConfig","scope","Object","assign","clientId","gAuth","defineProperties","prototype","$gAuth"],"sources":["/home/akams_r/Desktop/scrap/bridgelabs-submission/frontend/node_modules/vue-google-oauth2/index.js"],"sourcesContent":["\nvar googleAuth = (function () {\n\n  function installClient() {\n    var apiUrl = 'https://apis.google.com/js/api.js'\n    return new Promise((resolve) => {\n      var script = document.createElement('script')\n      script.src = apiUrl\n      script.onreadystatechange = script.onload = function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          setTimeout(function () {\n            resolve()\n          }, 500)\n        }\n      }\n      document.getElementsByTagName('head')[0].appendChild(script)\n    })\n  }\n\n  function initClient(config) {\n    return new Promise((resolve, reject) => {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init(config)\n          .then(() => {\n            resolve(window.gapi)\n          }).catch((error) => {\n            reject(error)\n          })\n      })\n    })\n\n  }\n\n  function Auth() {\n    if (!(this instanceof Auth))\n      return new Auth()\n    this.GoogleAuth = null /* window.gapi.auth2.getAuthInstance() */\n    this.isAuthorized = false\n    this.isInit = false\n    this.prompt = null\n    this.isLoaded = function () {\n      /* eslint-disable */\n      console.warn('isLoaded() will be deprecated. You can use \"this.$gAuth.isInit\"')\n      return !!this.GoogleAuth\n    };\n\n    this.load = (config, prompt) => {\n      installClient()\n        .then(() => {\n          return initClient(config)\n        })\n        .then((gapi) => {\n          this.GoogleAuth = gapi.auth2.getAuthInstance()\n          this.isInit = true\n          this.prompt = prompt\n          this.isAuthorized = this.GoogleAuth.isSignedIn.get()\n        }).catch((error) => {\n          console.error(error)\n        })\n    };\n\n    this.signIn = (successCallback, errorCallback) => {\n      return new Promise((resolve, reject) => {\n        if (!this.GoogleAuth) {\n          if (typeof errorCallback === 'function') errorCallback(false)\n          reject(false)\n          return\n        }\n        this.GoogleAuth.signIn()\n          .then(googleUser => {\n            if (typeof successCallback === 'function') successCallback(googleUser)\n            this.isAuthorized = this.GoogleAuth.isSignedIn.get()\n            resolve(googleUser)\n          })\n          .catch(error => {\n            if (typeof errorCallback === 'function') errorCallback(error)\n            reject(error)\n          })\n      })\n    };\n\n    this.getAuthCode = (successCallback, errorCallback) => {\n      return new Promise((resolve, reject) => {\n        if (!this.GoogleAuth) {\n          if (typeof errorCallback === 'function') errorCallback(false)\n          reject(false)\n          return\n        }\n        this.GoogleAuth.grantOfflineAccess({ prompt: this.prompt })\n          .then(function (resp) {\n            if (typeof successCallback === 'function') successCallback(resp.code)\n            resolve(resp.code)\n          })\n          .catch(function (error) {\n            if (typeof errorCallback === 'function') errorCallback(error)\n            reject(error)\n          })\n      })\n    };\n\n    this.signOut = (successCallback, errorCallback) => {\n      return new Promise((resolve, reject) => {\n        if (!this.GoogleAuth) {\n          if (typeof errorCallback === 'function') errorCallback(false)\n          reject(false)\n          return\n        }\n        this.GoogleAuth.signOut()\n          .then(() => {\n            if (typeof successCallback === 'function') successCallback()\n            this.isAuthorized = false\n            resolve(true)\n          })\n          .catch(error => {\n            if (typeof errorCallback === 'function') errorCallback(error)\n            reject(error)\n          })\n      })\n    };\n  }\n\n  return new Auth()\n})();\n\n\n\n\nfunction installGoogleAuthPlugin(Vue, options) {\n  /* eslint-disable */\n  //set config\n  let GoogleAuthConfig = null\n  let GoogleAuthDefaultConfig = { scope: 'profile email' }\n  let prompt = 'select_account'\n  if (typeof options === 'object') {\n    GoogleAuthConfig = Object.assign(GoogleAuthDefaultConfig, options)\n    if (options.scope) GoogleAuthConfig.scope = options.scope\n    if (options.prompt) prompt = options.prompt\n    if (!options.clientId) {\n      console.warn('clientId is required')\n    }\n  } else {\n    console.warn('invalid option type. Object type accepted only')\n  }\n\n  //Install Vue plugin\n  Vue.gAuth = googleAuth\n  Object.defineProperties(Vue.prototype, {\n    $gAuth: {\n      get: function () {\n        return Vue.gAuth\n      }\n    }\n  })\n  Vue.gAuth.load(GoogleAuthConfig, prompt)\n}\n\nexport default installGoogleAuthPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}